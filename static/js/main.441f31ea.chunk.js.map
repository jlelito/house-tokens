{"version":3,"sources":["src_images/eth-diamond-rainbow.png","src_images/smiley.jpg","Card.js","Main.js","Navbar.js","utils.js","MintHouse.js","HouseTable.js","SendHouse.js","App.js","index.js","src_images/ETH.png"],"names":["module","exports","IMAGES_ARRAY","name","img","Card","chooseImage","sqFeet","role","className","style","maxWidth","width","height","src","Identicon","this","props","house","owner","toString","id","maxHeight","homeAddress","bedrooms","bathrooms","window","web3","utils","fromWei","price","ethlogo","account","onSubmit","event","newPrice","preventDefault","inputAmount","value","changePrice","houseID","type","ref","placeholder","step","min","required","onClick","priceOfHouse","console","log","buyHouse","Component","Main","houseItems","map","key","Navbar","target","rel","coloreth","alt","action","href","hash","Number","balance","toFixed","loadWeb3","a","ethereum","Web3","enable","currentProvider","alert","MintHouse","mintHouse","houseAddress","squareFeet","ethPrice","toWei","houseToken","methods","mint","send","from","on","location","reload","e","admin","homeSquarefeet","homePrice","homeBedrooms","homeBathrooms","address","HouseTable","houseTokenList","SendHouse","houseTokenBalance","amount","targetAddress","sendTokens","App","tokenId","state","transferHouse","setState","events","sentHouse","error","returnValues","sentTo","to","updateHouses","balanceOf","call","currentHouseTokenBalance","housePrice","boughtHouse","result","oldOwner","changedPrice","targetID","oldPrice","currentEthBalance","loading","wrongNetwork","loadBlockchainData","eth","getAccounts","accounts","net","getId","networkId","houseTokenData","HouseToken","networks","abi","tokenContract","Contract","contractAdmin","getBalance","nextId","length","houses","i","currentHouse","push","message","smile","currentBalance","ReactDOM","render","document","getElementById"],"mappings":"uwiQAAAA,EAAOC,QAAU,IAA0B,iD,mBCA3CD,EAAOC,QAAU,IAA0B,oC,uOCKrCC,EAAe,CACjB,CACEC,KAAM,cACNC,IAAK,4BAEP,CACED,KAAM,aACNC,IAAK,2BAGP,CACED,KAAM,YACNC,IAAK,2BAyHMC,E,2MAlHbC,YAAc,SAACC,GACb,OAAGA,GAAU,IACJL,EAAa,GAAGE,IAGjBG,EAAS,KAAOA,EAAS,IACxBL,EAAa,GAAGE,IAGhBF,EAAa,GAAGE,K,wEAKjB,IAAD,OAEP,OACE,6BACI,0BAAMI,KAAK,OAAOC,UAAU,iDAC1B,yBAAKA,UAAU,oCAAoCC,MAAO,CAAEC,SAAU,UAEhE,yBAAKF,UAAU,OACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,eAEb,yBACEA,UAAU,0BACVG,MAAM,KACNC,OAAO,KACPC,IAAG,gCAA2B,IAAIC,IAAUC,KAAKC,MAAMC,MAAMC,MAAO,IAAIC,cAE1E,2BAAOX,UAAU,cAAcO,KAAKC,MAAMC,MAAMC,QAElD,wBAAIE,GAAG,YAAYZ,UAAU,+BAC3B,wBAAIA,UAAU,mBACZ,uBAAGA,UAAU,eAAc,yBAAKK,IAAKE,KAAKV,YAAYU,KAAKC,MAAMC,MAAMX,QAASG,MAAO,CAAEC,SAAU,QAASW,UAAW,YACvH,2BAAIN,KAAKC,MAAMC,MAAMK,aACrB,2CAAiBP,KAAKC,MAAMC,MAAMX,OAAlC,YACA,wCAAcS,KAAKC,MAAMC,MAAMM,UAC/B,yCAAeR,KAAKC,MAAMC,MAAMO,YAElC,wBAAKhB,UAAU,wBAEb,2BAAOA,UAAU,8BACf,qCAAWiB,OAAOC,KAAKC,MAAMC,QAAQb,KAAKC,MAAMC,MAAMY,MAAO,SAA7D,SAA4E,yBAAKhB,IAAKiB,IAASnB,MAAM,KAAKC,OAAO,SAElHG,KAAKC,MAAMC,MAAMC,OAASH,KAAKC,MAAMe,QACtC,oCAGA,0BACEvB,UAAU,cACVwB,SAAU,SAACC,GAEX,IAAIC,EADJD,EAAME,iBAEND,EAAW,EAAKE,YAAYC,MAAMlB,WAClC,EAAKH,MAAMsB,YAAY,EAAKtB,MAAMC,MAAMsB,QAASL,KAGjD,yBAAK1B,UAAU,eAEP,2BACIgC,KAAK,SACLC,IAAK,SAACL,GAAkB,EAAKA,YAAcA,GAC3C5B,UAAU,oCACVkC,YAAY,MACZC,KAAK,MACLC,IAAI,IACJnC,MAAO,CAAEE,MAAO,QAChBkC,UAAQ,IAGhB,0BAAMrC,UAAU,mBACZ,4BAAQgC,KAAK,SAAShC,UAAU,0BAAhC,oBAUV,4BACEA,UAAU,+CACVN,KAAMa,KAAKC,MAAMC,MAAMsB,QACvBO,QAAS,SAACb,GACRA,EAAME,iBACN,IAAIY,EAAe,EAAK/B,MAAMC,MAAMY,MAChCU,EAAU,EAAKvB,MAAMC,MAAMsB,QAC/BS,QAAQC,IAAIF,EAAcR,GAC1B,EAAKvB,MAAMkC,SAASX,EAASQ,KARjC,8B,GArFTI,aChBblD,EAAe,CACnB,CACEC,KAAM,cACNC,IAAK,4BAEP,CACED,KAAM,aACNC,IAAK,2BAGP,CACED,KAAM,YACNC,IAAK,2BAoDMiD,E,2MA5Cb/C,YAAc,SAACC,GACb,OAAGA,GAAU,IACJL,EAAa,GAAGE,IAGjBG,EAAS,KAAOA,EAAS,IACxBL,EAAa,GAAGE,IAGhBF,EAAa,GAAGE,K,wEAKjB,IAAD,OAEP,OACE,yBAAKK,UAAU,mBAEX,0BAAMD,KAAK,OAAOC,UAAU,iDAC1B,yBAAKA,UAAU,qCAGXO,KAAKC,MAAMqC,WAAWC,KAAI,SAACrC,EAAOsC,GAClC,OACE,kBAAC,EAAD,CACEtC,MAAOA,EACPqB,YAAa,EAAKtB,MAAMsB,YACxBY,SAAU,EAAKlC,MAAMkC,SACrBnB,QAAS,EAAKf,MAAMe,oB,GA/BrBoB,a,iBC4BJK,E,iLA5CX,OACE,yBAAKhD,UAAU,kEACb,uBACEA,UAAU,sCACViD,OAAO,SACPC,IAAI,uBAEJ,yBAAK7C,IAAK8C,IAAUhD,MAAM,KAAKC,OAAO,KAAKJ,UAAU,gCAAgCoD,IAAI,qBAL3F,iBAQsB,MAArB7C,KAAKC,MAAM6C,OAAiB,KAC7B,yBAAKrD,UAAU,qCACZO,KAAKC,MAAM6C,OADd,KAEE,uBAAGrD,UAAU,kBAAkBsD,KAAI,0CAAqC/C,KAAKC,MAAM+C,MAAQN,OAAO,UAC/F1C,KAAKC,MAAM+C,OAIhB,wBAAIvD,UAAU,mBACZ,wBAAIA,UAAU,oDACZ,yBAAKA,UAAU,sBACb,yBAAKY,GAAG,UAAUZ,UAAU,cAAcO,KAAKC,MAAMe,SAErDhB,KAAKC,MAAMe,QACT,yBACAvB,UAAU,2BACVG,MAAM,KACNC,OAAO,KACPC,IAAG,gCAA2B,IAAIC,IAAUC,KAAKC,MAAMe,QAAS,IAAIZ,cAEpE,gCAEJ,yBAAKC,GAAG,UAAUZ,UAAU,OAC1B,yBAAKY,GAAG,UAAUZ,UAAU,cAA5B,gBAAuDwD,OAAOjD,KAAKC,MAAMiD,SAASC,QAAQ,GAA1F,KACA,yBAAK1D,UAAU,OAAOK,IAAKiB,IAASnB,MAAM,KAAKC,OAAO,e,GArC/CuC,a,0CCaJgB,EAhBH,uCAAG,sBAAAC,EAAA,0DAEL3C,OAAO4C,SAFF,uBAGP5C,OAAOC,KAAO,IAAI4C,IAAK7C,OAAO4C,UAHvB,SAID5C,OAAO4C,SAASE,SAJf,6BAMA9C,OAAOC,KACdD,OAAOC,KAAO,IAAI4C,IAAK7C,OAAOC,KAAK8C,iBAGnC/C,OAAOgD,MAAM,uEAVN,2CAAH,qDCsHGC,E,2MApHbC,UAAY,SAACC,EAAcC,EAAYhD,EAAON,EAAUC,GAEpD,IAAIsD,EAAWrD,OAAOC,KAAKC,MAAMoD,MAAMlD,EAAO,SAC9C,IACA,EAAKb,MAAMgE,WAAWC,QAAQC,KAAKN,EAAcC,EAAYC,EAAUvD,EAAUC,GAAW2D,KAAK,CAAEC,KAAM,EAAKpE,MAAMe,UAAWsD,GAAG,mBAAmB,SAACtB,GACpJtC,OAAO6D,SAASC,YAGlB,MAAMC,GACN/D,OAAOgD,MAAMe,K,wEAIP,IAAD,OAEP,OACE,6BACCzE,KAAKC,MAAMe,SAAWhB,KAAKC,MAAMyE,MAC9B,oCAEA,wBAAIjF,UAAU,QAAd,oBAEA,0BAAMA,UAAU,OAEFwB,SAAU,SAACC,GAEX,IAAIX,EAAaoE,EAAgBC,EAAWC,EAAcC,EAD1D5D,EAAME,iBAENb,EAAc,EAAKwE,QAAQzD,MAC3BqD,EAAiB,EAAKb,WAAWxC,MAAMlB,WACvCwE,EAAY,EAAK9D,MAAMQ,MAAMlB,WAC7ByE,EAAe,EAAKrE,SAASc,MAAMlB,WACnC0E,EAAgB,EAAKrE,UAAUa,MAAMlB,WACrC,EAAKwD,UAAUrD,EAAaoE,EAAgBC,EAAWC,EAAcC,KAKzE,yBAAKrF,UAAU,0CACX,yBAAKA,UAAU,uBACb,mDACE,2BACAgC,KAAK,OACLC,IAAK,SAACqD,GAAc,EAAKA,QAAUA,GACnCtF,UAAU,+BACVkC,YAAY,sBACZG,UAAQ,MAIhB,yBAAKrC,UAAU,8BACb,yBAAKA,UAAU,uBACb,2BAAOA,UAAU,eAAjB,eACE,2BACAgC,KAAK,SACLC,IAAK,SAACoC,GAAiB,EAAKA,WAAaA,GACzCrE,UAAU,+BACVkC,YAAY,IACZG,UAAQ,KAKV,yBAAKrC,UAAU,uBACb,2BAAOA,UAAU,eAAjB,SACE,2BACAgC,KAAK,SACLG,KAAK,MACLF,IAAK,SAACZ,GAAY,EAAKA,MAAQA,GAC/BrB,UAAU,+BACVkC,YAAY,QACZG,UAAQ,MAMd,yBAAKrC,UAAU,mCACb,yBAAKA,UAAU,YACb,2BAAOA,UAAU,eAAjB,sBACE,2BACAgC,KAAK,SACLC,IAAK,SAAClB,GAAe,EAAKA,SAAWA,GACrCf,UAAU,+BACVkC,YAAY,IACZG,UAAQ,KAKV,yBAAKrC,UAAU,YACb,2BAAOA,UAAU,eAAjB,uBACE,2BACAgC,KAAK,SACLC,IAAK,SAACjB,GAAgB,EAAKA,UAAYA,GACvChB,UAAU,+BACVkC,YAAY,IACZG,UAAQ,MAQlB,4BAAQL,KAAK,SACbhC,UAAU,2BADV,iBAMN,U,GAhHQ2C,aCiDT4C,E,iLA5CL,IAAD,OAED,OACI,2BAAOvF,UAAU,wCACjB,iDACE,2BAAOA,UAAU,eACL,4BACI,wCACA,uCACA,2CACA,qCACA,wCACA,2CAGhB,+BACCO,KAAKC,MAAMgF,eAAe1C,KAAI,SAAArC,GAAK,OAClC,wBAAIT,UAAU,yBAAyB+C,IAAKtC,EAAMsB,SACjD,EAAKvB,MAAMe,SAAWd,EAAMC,MACrB,oCACI,4BAAKD,EAAMsB,QACT,yBACE/B,UAAU,qBACVG,MAAM,KACNC,OAAO,KACPC,IAAG,gCAA2B,IAAIC,IAAU,EAAKE,MAAMe,QAAS,IAAIZ,eAGxE,4BAAKF,EAAMK,aACX,4BAAKL,EAAMX,OAAX,UACA,4BAAKmB,OAAOC,KAAKC,MAAMC,QAAQX,EAAMY,MAAO,SAA5C,QAA0D,yBAAKhB,IAAKiB,IAAStB,UAAU,cAAcG,MAAM,KAAKC,OAAO,OAAvH,KACA,4BAAKK,EAAMM,UACX,4BAAKN,EAAMO,YAGnB,e,GArCK2B,aCkER8C,E,iLAhEH,IAAD,OAEP,OACE,yBAAKzF,UAAU,YAEsB,GAAhCO,KAAKC,MAAMkF,kBAAyB,sDACnC,oCACF,wBAAI1F,UAAU,QAAd,oBACA,0BAAMA,UAAU,OAAOwB,SAAU,SAACC,GAElB,IAAIkE,EAAQC,EADZnE,EAAME,iBAENgE,EAAS,EAAK/D,YAAYC,MAAMlB,WAChCiF,EAAgB,EAAKA,cAAc/D,MACnC,EAAKrB,MAAMqF,WAAWF,EAAQC,KAKlC,yBAAK5F,UAAU,aACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,yBACb,2BAAOA,UAAU,QAAjB,WACE,2BACAgC,KAAK,OACLC,IAAK,SAAC2D,GAAoB,EAAKA,cAAgBA,GAC/C5F,UAAU,+BACVkC,YAAY,UACZG,UAAQ,KAGZ,yBAAKrC,UAAU,4BACb,2BAAOA,UAAU,QAAjB,YACA,4BAAQA,UAAU,+BAA+BY,GAAG,gBAAgBqB,IAAK,SAACL,GAAkB,EAAKA,YAAcA,IAC5GrB,KAAKC,MAAMgF,eAAe1C,KAAI,SAAArC,GAAK,OAClC,oCACG,EAAKD,MAAMe,SAAWd,EAAMC,MAE7B,gCACGD,EAAMsB,SAGL,YAWd,4BAAQC,KAAK,SAAShC,UAAU,mCAAhC,iB,GAxDF2C,aC+QTmD,E,YAxFX,WAAYtF,GAAQ,IAAD,8BACjB,4CAAMA,KAlGRqF,WAAa,SAACE,EAAST,GACrB,IAEI,EAAKU,MAAMxB,WAAWC,QAAQwB,cAAcX,EAASS,GAASpB,KAAK,CAAEC,KAAM,EAAKoB,MAAMzE,UAAWsD,GAAG,kBAApG,uCAAuH,WAAOtB,GAAP,SAAAK,EAAA,sDAErH,EAAKsC,SAAS,CAAC3C,KAAKA,IACpB,EAAK2C,SAAS,CAAC7C,OAAQ,eACvB,EAAK2C,MAAMxB,WAAW2B,OAAOC,UAAU,GAAvC,uCAA2C,WAAOC,EAAO5E,GAAd,mBAAAmC,EAAA,6DACrC7B,EAAUN,EAAM6E,aAAa1F,GAC7B2F,EAAS9E,EAAM6E,aAAaE,GAChCvF,OAAOgD,MAAM,6BAAoClC,EAAU,iBAAmBwE,GAHrC,SAInC,EAAKE,eAJ8B,uBAKJ,EAAKT,MAAMxB,WAAWC,QAAQiC,UAAU,EAAKV,MAAMzE,SAASoF,OALxD,OAKrCC,EALqC,OAMzC,EAAKV,SAAS,CAAER,kBAAmBkB,IANM,2CAA3C,oCAAArG,KAAA,gBAJqH,2CAAvH,kCAAAA,KAAA,gBAaKsE,GAAG,SAAS,SAACwB,GACdpF,OAAOgD,MAAM,YAGjB,MAAOe,GACP/D,OAAOgD,MAAMe,KA4EA,EAvEnBb,UAAY,SAACC,EAAcC,EAAYhD,EAAON,EAAUC,GAEtD,IAAIsD,EAAWrD,OAAOC,KAAKC,MAAMoD,MAAMlD,EAAO,SAC9C,IACA,EAAK2E,MAAMxB,WAAWC,QAAQC,KAAKN,EAAcC,EAAYC,EAAUvD,EAAUC,GAAW2D,KAAK,CAAEC,KAAM,EAAKoB,MAAMzE,UAAWsD,GAAG,kBAAlI,uCAAqJ,WAAOtB,GAAP,SAAAK,EAAA,6DACnJ,EAAKsC,SAAS,CAAC3C,KAAKA,IACpB,EAAK2C,SAAS,CAAC7C,OAAQ,iBAF4H,SAG7I,EAAKoD,eAHwI,2CAArJ,kCAAAlG,KAAA,gBAME,MAAMyE,GACN/D,OAAOgD,MAAMe,KA4DE,EArDlBtC,SAAW,SAACqD,EAASc,GACpB,IACA,EAAKb,MAAMxB,WAAWC,QAAQ/B,SAASqD,GAASpB,KAAK,CAAEC,KAAM,EAAKoB,MAAMzE,QAASM,MAAOgF,IAAchC,GAAG,mBAAmB,SAACtB,GAC3H,EAAK2C,SAAS,CAAC3C,KAAKA,IACpB,EAAK2C,SAAS,CAAC7C,OAAQ,iBACvB,EAAK2C,MAAMxB,WAAW2B,OAAOW,YAAY,GAAzC,uCAA6C,WAAOT,EAAO5E,GAAd,mBAAAmC,EAAA,6DACrCmD,EAAStF,EAAM6E,aAAaxF,YAC5BO,EAAQI,EAAM6E,aAAajF,MAC3B2F,EAAWvF,EAAM6E,aAAa5F,MAClCW,EAAQJ,OAAOC,KAAKC,MAAMC,QAAQC,EAAO,SACzCJ,OAAOgD,MAAM,kCAAyCV,EAAO,gBAAkBwD,EAAS,YAAc1F,EAAQ,sBAA6B2F,GALlG,SAMnC,EAAKP,eAN8B,2CAA7C,oCAAAlG,KAAA,mBAUKsE,GAAG,SAAS,SAACwB,GACdpF,OAAOgD,MAAM,kCAGnB,MAAMe,GACJ/D,OAAOgD,MAAMe,KAiCE,EA1BnBlD,YAAc,SAACiE,EAASrE,GACtB,IACA,IAAI4C,EAAWrD,OAAOC,KAAKC,MAAMoD,MAAM7C,EAAU,SACjD,EAAKsE,MAAMxB,WAAWC,QAAQ3C,YAAYiE,EAASzB,GAAUK,KAAK,CAAEC,KAAM,EAAKoB,MAAMzE,UAAWsD,GAAG,kBAAnG,uCAAsH,WAAOtB,GAAP,SAAAK,EAAA,sDACpH,EAAKsC,SAAS,CAAC3C,KAAKA,IACpB,EAAK2C,SAAS,CAAC7C,OAAQ,kBACvB,EAAK2C,MAAMxB,WAAW2B,OAAOc,aAAa,GAA1C,uCAA8C,WAAOZ,EAAO5E,GAAd,mBAAAmC,EAAA,6DACxCsD,EAAWzF,EAAM6E,aAAa1F,GAC9BuG,EAAW1F,EAAM6E,aAAaa,SAC9BzF,EAAWD,EAAM6E,aAAa5E,SAClCyF,EAAWlG,OAAOC,KAAKC,MAAMC,QAAQ+F,EAAU,SAC/CzF,EAAWT,OAAOC,KAAKC,MAAMC,QAAQM,EAAU,SAC/CT,OAAOgD,MAAM,gCAAuCiD,EAAW,gBAAkBC,EAAW,oBAA2BzF,EAAW,QANtF,SAOtC,EAAK+E,eAPiC,2CAA9C,oCAAAlG,KAAA,gBAHoH,2CAAtH,kCAAAA,KAAA,gBAaKsE,GAAG,SAAS,SAACwB,GACdpF,OAAOgD,MAAM,uCAGjB,MAAMe,GACJ/D,OAAOgD,MAAMe,KAOf,EAAKgB,MAAQ,CACXzE,QAAS,MACT0D,MAAM,MACNT,WAAY,GACZkB,kBAAmB,IACnB0B,kBAAmB,IACnB5B,eAAgB,GAChB6B,SAAS,EACT9D,KAAM,MACNF,OAAQ,KACRiE,cAAc,GAZC,E,4MA3Kb3D,I,uBACApD,KAAKgH,qB,uBACLhH,KAAKkG,e,0RAMLvF,EAAOD,OAAOC,K,SAEGA,EAAKsG,IAAIC,c,cAA1BC,E,OACNnH,KAAK2F,SAAS,CAAC3E,QAASmG,EAAS,K,SAETxG,EAAKsG,IAAIG,IAAIC,Q,UAA/BC,E,SAGAC,EAAiBC,EAAWC,SAASH,I,wBAEnCI,EAAMF,EAAWE,IACjB3C,EAAUwC,EAAexC,QAEzB4C,EAAgB,IAAIhH,EAAKsG,IAAIW,SAASF,EAAK3C,GACjD/E,KAAK2F,SAAS,CAAE1B,WAAa0D,I,UAIQA,EAAczD,QAAQiC,UAAUnG,KAAKyF,MAAMzE,SAASoF,O,eAArFC,E,OAEJrG,KAAK2F,SAAS,CAAER,kBAAmBkB,I,UAETsB,EAAczD,QAAQQ,QAAQ0B,O,eAApDyB,E,OACJ7H,KAAK2F,SAAS,CAACjB,MAAOmD,I,UAEQlH,EAAKsG,IAAIa,WAAWX,EAAS,I,QAAvDN,E,OACJA,EAAoBnG,OAAOC,KAAKC,MAAMC,QAAQgG,EAAmB,SACjE7G,KAAK2F,SAAS,CAACkB,kBAAmBA,I,wBAG9BnG,OAAOgD,MAAM,2F,6RAWI1D,KAAKyF,MAAMxB,WAAWC,QAAQ6D,SAAS3B,O,OAAtD4B,E,OAEEC,EAAS,GACPC,EAAE,E,YAAGA,EAAEF,G,iCACYhI,KAAKyF,MAAMxB,WAAWC,QAAQ+D,OAAOC,GAAG9B,O,OAA7D+B,E,OACJF,EAAOG,KAAKD,G,QAFSD,I,8BAKvBlI,KAAK2F,SAAS,CAACV,eAAgBgD,IAC/BjI,KAAK2F,SAAS,CAACmB,SAAS,I,UACMpG,OAAOC,KAAKsG,IAAIa,WAAW9H,KAAKyF,MAAMzE,S,QAAhE6F,E,OACJA,EAAoBnG,OAAOC,KAAKC,MAAMC,QAAQgG,EAAmB,SACjE7G,KAAK2F,SAAS,CAACkB,kBAAmBA,I,kDAGhC7G,KAAK2F,SAAS,CAACmB,SAAS,IACxBpG,OAAOgD,MAAM,+BAAgC,KAAE2E,S,gKA2H7C,IAAD,OACP,OAAGrI,KAAKyF,MAAMqB,QAEV,yBAAKrH,UAAU,eACb,wBAAIA,UAAU,oBAAd,wCACA,yBAAKA,UAAU,eAAeK,IAAKwI,QAKzC5H,OAAO4C,SAASgB,GAAG,kBAAnB,uCAAsC,WAAM6C,GAAN,SAAA9D,EAAA,sDACpC,EAAKsC,SAAS,CAAC3E,QAASmG,EAAS,KACjCzG,OAAO6D,SAASC,SAFoB,2CAAtC,uDAQE,yBAAK/E,UAAU,OACb,kBAAC,EAAD,CACEuB,QAAShB,KAAKyF,MAAMzE,QACpBuH,eAAgBvI,KAAKyF,MAAMN,kBAC3BnC,KAAMhD,KAAKyF,MAAMzC,KACjBF,OAAQ9C,KAAKyF,MAAM3C,OACnBI,QAASlD,KAAKyF,MAAMoB,oBAItB,wBAAIpH,UAAU,OAAOY,GAAG,SAAxB,iBACA,kBAAC,EAAD,CACEW,QAAShB,KAAKyF,MAAMzE,QACpB0D,MAAO1E,KAAKyF,MAAMf,MAClBT,WAAYjE,KAAKyF,MAAMxB,aAGzB,6BAEA,yBAAKxE,UAAU,8BACb,kBAAC,EAAD,CACEuB,QAAShB,KAAKyF,MAAMzE,QACpBmE,kBAAqBnF,KAAKyF,MAAMN,kBAChCF,eAAkBjF,KAAKyF,MAAMR,eAC7BK,WAActF,KAAKsF,aAGrB,yBAAK7F,UAAU,iBACb,wBAAIA,UAAU,QAAd,eACA,kBAAC,EAAD,CACEuB,QAAShB,KAAKyF,MAAMzE,QACpBiE,eAAgBjF,KAAKyF,MAAMR,mBA/BnC,sBAwCE,6BAEA,kBAAC,EAAD,CACE3C,WAActC,KAAKyF,MAAMR,eACzB9C,SAAYnC,KAAKmC,SACjBnB,QAAShB,KAAKyF,MAAMzE,QACpBO,YAAavB,KAAKuB,oB,GA/PVa,a,MCLlBoG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCPjD3J,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.441f31ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/eth-diamond-rainbow.c7be19d8.png\";","module.exports = __webpack_public_path__ + \"static/media/smiley.50df7b69.jpg\";","import React, { Component } from 'react';\r\nimport ethlogo from './src_images/ETH.png';\r\nimport Identicon from 'identicon.js';\r\n\r\n\r\nconst IMAGES_ARRAY = [\r\n    {\r\n      name: 'small house',\r\n      img: './images/small_house.jpg'\r\n    },\r\n    {\r\n      name: 'cool house',\r\n      img: './images/cool_house.jpg'\r\n    },\r\n    \r\n    {\r\n      name: 'big house',\r\n      img: './images/big_house.jpg'\r\n    }\r\n    \r\n  ]\r\n\r\nclass Card extends Component {\r\n\r\n    chooseImage = (sqFeet) => {\r\n      if(sqFeet <= 500){\r\n        return IMAGES_ARRAY[0].img\r\n      }\r\n      \r\n      else if(sqFeet > 500 && sqFeet < 2000) {\r\n        return IMAGES_ARRAY[1].img\r\n      }\r\n      else{\r\n        return IMAGES_ARRAY[2].img\r\n      }\r\n      \r\n    }\r\n  \r\n    render() {\r\n  \r\n      return (\r\n        <div> \r\n            <main role=\"main\" className=\"container-fluid d-flex justify-content-center\" >\r\n              <div className=\"card-group justify-content-center\" style={{ maxWidth: '375px' }}>\r\n                \r\n                    <div className=\"row\">\r\n                      <div className=\"card mb-4 mx-4\" >\r\n                        <div className=\"card-header\">\r\n                          \r\n                          <img\r\n                            className='mr-2 float-left rounded'\r\n                            width='20'\r\n                            height='20'\r\n                            src={`data:house/png;base64,${new Identicon(this.props.house.owner, 30).toString()}`}\r\n                          />\r\n                          <small className=\"text-muted\">{this.props.house.owner}</small>\r\n                        </div>\r\n                        <ul id=\"houseList\" className=\"list-group list-group-flush\">\r\n                          <li className=\"list-group-item\">\r\n                            <p className=\"text-center\"><img src={this.chooseImage(this.props.house.sqFeet)} style={{ maxWidth: '350px', maxHeight: '150px'}}/></p>\r\n                            <p>{this.props.house.homeAddress}</p>\r\n                            <p>Square Feet: {this.props.house.sqFeet} sq/feet</p>\r\n                            <p>Bedrooms: {this.props.house.bedrooms}</p>\r\n                            <p>Bathrooms: {this.props.house.bathrooms}</p>\r\n                          </li>\r\n                          <li  className=\"list-group-item py-2\">\r\n                              \r\n                            <small className=\"float-left mt-1 text-muted\">\r\n                              <b>Price: {window.web3.utils.fromWei(this.props.house.price, 'Ether')} Ether<img src={ethlogo} width='25' height='25'/></b>\r\n                            </small>\r\n                            {this.props.house.owner == this.props.account ? \r\n                            <>\r\n    \r\n                            \r\n                            <form \r\n                              className=\"float-right\"\r\n                              onSubmit={(event) => {\r\n                              event.preventDefault()\r\n                              let newPrice\r\n                              newPrice = this.inputAmount.value.toString()                         \r\n                              this.props.changePrice(this.props.house.houseID, newPrice)\r\n                              \r\n                            }}>\r\n                              <div className=\"input-group\">\r\n                                  \r\n                                      <input\r\n                                          type=\"number\"\r\n                                          ref={(inputAmount) => { this.inputAmount = inputAmount }}\r\n                                          className=\"form-control form-control-sm mr-1\"\r\n                                          placeholder=\"0.0\"\r\n                                          step=\".01\"\r\n                                          min=\"0\"\r\n                                          style={{ width: '55px' }}\r\n                                          required \r\n                                      />\r\n                                  \r\n                                  <span className=\"input-group-btn\">\r\n                                      <button type=\"submit\" className=\"btn btn-primary btn-sm\" >\r\n                                          Change Price\r\n                                      </button>\r\n                                  </span>\r\n                              </div>\r\n                            </form> \r\n    \r\n                            </>\r\n                            \r\n                            : (\r\n                            <button\r\n                              className=\"btn btn-primary btn-sm float-right pt-0 mt-1\"\r\n                              name={this.props.house.houseID}\r\n                              onClick={(event) => {\r\n                                event.preventDefault()\r\n                                let priceOfHouse = this.props.house.price\r\n                                let houseID = this.props.house.houseID\r\n                                console.log(priceOfHouse, houseID)\r\n                                this.props.buyHouse(houseID, priceOfHouse)\r\n                              }}\r\n                            >\r\n                              Buy this House!\r\n                            </button>\r\n                    )}\r\n                          </li>\r\n                        </ul>\r\n                    \r\n                      </div>\r\n                    </div>\r\n                    \r\n                    \r\n                 \r\n                \r\n              </div>\r\n            </main>\r\n          \r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Card;","import React, { Component } from 'react';\r\nimport Card from './Card.js';\r\n\r\n\r\n\r\n\r\nconst IMAGES_ARRAY = [\r\n  {\r\n    name: 'small house',\r\n    img: './images/small_house.jpg'\r\n  },\r\n  {\r\n    name: 'cool house',\r\n    img: './images/cool_house.jpg'\r\n  },\r\n  \r\n  {\r\n    name: 'big house',\r\n    img: './images/big_house.jpg'\r\n  }\r\n  \r\n]\r\n\r\n\r\nclass Main extends Component {\r\n\r\n  chooseImage = (sqFeet) => {\r\n    if(sqFeet <= 500){\r\n      return IMAGES_ARRAY[0].img\r\n    }\r\n    \r\n    else if(sqFeet > 500 && sqFeet < 2000) {\r\n      return IMAGES_ARRAY[1].img\r\n    }\r\n    else{\r\n      return IMAGES_ARRAY[2].img\r\n    }\r\n    \r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"resume-section \">\r\n        \r\n          <main role=\"main\" className=\"container-fluid d-flex justify-content-center\">\r\n            <div className=\"card-group justify-content-center\">\r\n              \r\n              \r\n              { this.props.houseItems.map((house, key) => {\r\n                return(\r\n                  <Card\r\n                    house={house}\r\n                    changePrice={this.props.changePrice}\r\n                    buyHouse={this.props.buyHouse}\r\n                    account={this.props.account}\r\n                  />\r\n                \r\n                  \r\n                )\r\n              })}\r\n              \r\n            </div>\r\n          </main>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport Identicon from 'identicon.js';\r\nimport ethlogo from './src_images/ETH.png';\r\nimport coloreth from './src_images/eth-diamond-rainbow.png';\r\n\r\nclass Navbar extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n        <a\r\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <img src={coloreth} width=\"20\" height=\"30\" className=\"d-inline-block align-top mr-2\" alt=\"rainbow eth logo\" />\r\n          House Tokens!\r\n        </a>\r\n        {this.props.action == null ? null : \r\n        <div className=\"justify-content-center text-white\">\r\n          {this.props.action} :  \r\n          <a className=\"text-green ml-2\" href={`https://ropsten.etherscan.io/tx/${this.props.hash}`} target=\"_blank\">\r\n            {this.props.hash}\r\n          </a> \r\n        </div>\r\n        }\r\n        <ul className=\"navbar-nav px-3\">\r\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\r\n            <div className=\"text-secondary row\">\r\n              <div id=\"account\" className=\"text-white\">{this.props.account}</div>\r\n            \r\n            { this.props.account\r\n              ? <img\r\n                className='ml-2 float-right rounded'\r\n                width='30'\r\n                height='30'\r\n                src={`data:image/png;base64,${new Identicon(this.props.account, 30).toString()}`}\r\n              />\r\n              : <span></span>\r\n            }</div>\r\n            <div id=\"account\" className=\"row\">\r\n              <div id=\"balance\" className=\"text-white\">ETH Balance: {Number(this.props.balance).toFixed(3)} </div>\r\n              <img className=\"mb-1\" src={ethlogo} width='25' height='25'/>\r\n            </div>\r\n\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;","import Web3 from 'web3'\r\n\r\nconst loadWeb3 = async function() {\r\n    \r\n        if (window.ethereum) {\r\n          window.web3 = new Web3(window.ethereum)\r\n          await window.ethereum.enable()\r\n        }\r\n        else if (window.web3) {\r\n          window.web3 = new Web3(window.web3.currentProvider)\r\n        }\r\n        else {\r\n          window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n        }\r\n      \r\n      \r\n  }\r\n  \r\n  export default loadWeb3;","import React, { Component } from 'react';\r\n\r\nclass MintHouse extends Component {\r\n\r\n    mintHouse = (houseAddress, squareFeet, price, bedrooms, bathrooms) => {\r\n      \r\n        let ethPrice = window.web3.utils.toWei(price, 'Ether')\r\n        try{\r\n        this.props.houseToken.methods.mint(houseAddress, squareFeet, ethPrice, bedrooms, bathrooms).send({ from: this.props.account }).on('transactionHash', (hash) => {\r\n          window.location.reload();\r\n          \r\n        })\r\n      } catch(e) {\r\n        window.alert(e)\r\n      }\r\n      }\r\n  \r\n    render() {\r\n  \r\n      return (\r\n        <div>\r\n        {this.props.account == this.props.admin ? (\r\n            <>\r\n            \r\n            <h3 className=\"my-4\">Mint House Token</h3>\r\n            \r\n            <form className=\"mb-3\" \r\n            \r\n                          onSubmit={(event) => {\r\n                          event.preventDefault()\r\n                          let homeAddress, homeSquarefeet, homePrice, homeBedrooms, homeBathrooms\r\n                          homeAddress = this.address.value\r\n                          homeSquarefeet = this.squareFeet.value.toString()\r\n                          homePrice = this.price.value.toString()\r\n                          homeBedrooms = this.bedrooms.value.toString()\r\n                          homeBathrooms = this.bathrooms.value.toString()\r\n                          this.mintHouse(homeAddress, homeSquarefeet, homePrice, homeBedrooms, homeBathrooms)\r\n\r\n                          \r\n              }}>\r\n                      \r\n                      <div className=\"input-group row justify-content-center\">\r\n                          <div className=\"form-group col-md-6\">\r\n                            <label>Address of House</label>\r\n                              <input\r\n                              type=\"text\"\r\n                              ref={(address) => { this.address = address }}\r\n                              className=\"form-control form-control-lg\"\r\n                              placeholder=\"221 First Street...\"\r\n                              required />\r\n                          </div>\r\n                      </div>\r\n                      \r\n                      <div className=\"row justify-content-center\">\r\n                        <div className=\"form-group col-sm-3\">\r\n                          <label className=\"text-center\">Square Feet</label>\r\n                            <input\r\n                            type=\"number\"\r\n                            ref={(squareFeet) => { this.squareFeet = squareFeet }}\r\n                            className=\"form-control form-control-lg\"\r\n                            placeholder=\"0\"\r\n                            required /> \r\n                        </div>\r\n                        \r\n\r\n                        \r\n                          <div className=\"form-group col-sm-3\">\r\n                            <label className=\"text-center\">Price</label>\r\n                              <input\r\n                              type=\"number\"\r\n                              step=\".01\"\r\n                              ref={(price) => { this.price = price }}\r\n                              className=\"form-control form-control-lg\"\r\n                              placeholder=\"0 ETH\"\r\n                              required /> \r\n                          </div>\r\n                        \r\n                      </div>\r\n                        \r\n\r\n                        <div className=\"mb-4 row justify-content-center\">\r\n                          <div className=\"col-sm-3\">\r\n                            <label className=\"text-center\">Number of Bedrooms</label>\r\n                              <input\r\n                              type=\"number\"\r\n                              ref={(bedrooms) => { this.bedrooms = bedrooms }}\r\n                              className=\"form-control form-control-lg\"\r\n                              placeholder=\"0\"\r\n                              required /> \r\n                          </div>\r\n                          \r\n\r\n                          \r\n                            <div className=\"col-sm-3\">\r\n                              <label className=\"text-center\">Number of Bathrooms</label>\r\n                                <input\r\n                                type=\"number\"\r\n                                ref={(bathrooms) => { this.bathrooms = bathrooms }}\r\n                                className=\"form-control form-control-lg\"\r\n                                placeholder=\"0\"\r\n                                required /> \r\n                            </div>\r\n                          \r\n                        </div>\r\n                      \r\n                      \r\n                          \r\n                      \r\n                      <button type=\"submit\" \r\n                      className=\"btn btn-primary  btn-lg\">Mint House!</button>\r\n            </form>\r\n            \r\n            </>\r\n            \r\n            ) : null}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default MintHouse;","import React, { Component } from 'react';\r\nimport Identicon from 'identicon.js';\r\nimport ethlogo from './src_images/ETH.png';\r\n\r\n\r\nclass HouseTable extends Component {\r\n\r\nrender() {\r\n\r\n        return (\r\n            <table className=\"table table-striped table-hover mt-1\">\r\n            <caption>Owned Houses</caption>\r\n              <thead className=\"thead-light\">\r\n                          <tr>\r\n                              <th>House ID</th>\r\n                              <th>Address</th>\r\n                              <th>Square Feet</th>\r\n                              <th>Price</th>\r\n                              <th>Bedrooms</th>\r\n                              <th>Bathrooms</th>\r\n                          </tr>\r\n              </thead>\r\n              <tbody>\r\n              {this.props.houseTokenList.map(house => (\r\n                <tr className=\"justify-content-center\" key={house.houseID}>\r\n                {this.props.account == house.owner ? (\r\n                        <>\r\n                            <td>{house.houseID}\r\n                              <img\r\n                                className='float-left rounded'\r\n                                width='30'\r\n                                height='30'\r\n                                src={`data:house/png;base64,${new Identicon(this.props.account, 30).toString()}`}\r\n                              />\r\n                            </td>\r\n                            <td>{house.homeAddress}</td>\r\n                            <td>{house.sqFeet} sq/ft</td>\r\n                            <td>{window.web3.utils.fromWei(house.price, 'Ether')} ETH <img src={ethlogo} className=\"float-right\" width='25' height='25'/> </td>\r\n                            <td>{house.bedrooms}</td>\r\n                            <td>{house.bathrooms}</td>\r\n                        </>\r\n                        \r\n                ) : null}\r\n                </tr>\r\n                  ))}\r\n                  </tbody>\r\n            </table>\r\n        );\r\n}\r\n\r\n}\r\nexport default HouseTable;","\r\nimport React, { Component } from 'react';\r\n\r\nclass SendHouse extends Component {\r\n\r\n    \r\n  \r\n    render() {\r\n  \r\n      return (\r\n        <div className=\"col-sm-5\">\r\n            \r\n            {this.props.houseTokenBalance == 0 ? <h2>No House Tokens Owned!</h2> : (\r\n              <>\r\n            <h2 className=\"mb-4\">Send House Token</h2>\r\n            <form className=\"mb-3\" onSubmit={(event) => {\r\n                            event.preventDefault()\r\n                            let amount, targetAddress\r\n                            amount = this.inputAmount.value.toString()\r\n                            targetAddress = this.targetAddress.value\r\n                            this.props.sendTokens(amount, targetAddress)\r\n\r\n                            \r\n              }}>\r\n                           \r\n                        <div className=\"container\">\r\n                          <div className=\"row justify-content-center\">\r\n                            <div className=\"form-group mb-4 col-9\">\r\n                              <label className=\"mx-2\">Address</label>\r\n                                <input\r\n                                type=\"text\"\r\n                                ref={(targetAddress) => { this.targetAddress = targetAddress }}\r\n                                className=\"form-control form-control-lg\"\r\n                                placeholder=\"0x0....\"\r\n                                required />\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group mb-4 col-sm-3\">\r\n                              <label className=\"mx-2\">House ID</label>\r\n                              <select className=\"form-control form-control-lg\" id=\"houseIDSelect\" ref={(inputAmount) => { this.inputAmount = inputAmount }}>\r\n                                {this.props.houseTokenList.map(house => (\r\n                                  <>\r\n                                    {this.props.account == house.owner ? (\r\n                                      \r\n                                    <option>\r\n                                      {house.houseID}\r\n                                    </option>\r\n                                    \r\n                                    ) : null}\r\n                                  </>\r\n\r\n\r\n                                ))}\r\n                              </select>\r\n                            </div>\r\n                            \r\n\r\n                          </div>\r\n\r\n                          <button type=\"submit\" className=\"btn btn-primary btn-lg col-md-2\" >\r\n                              Send!\r\n                          </button>\r\n                        </div>   \r\n              </form>\r\n              </>\r\n            )}\r\n          </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default SendHouse;","import React, { Component } from 'react';\nimport HouseToken from './contracts/House.json';\nimport Main from './Main'\nimport Navbar from './Navbar'\nimport \"./App.css\";\nimport smile from './src_images/smiley.jpg'\nimport loadWeb3 from './utils.js';\nimport MintHouse from './MintHouse.js';\nimport HouseTable from './HouseTable';\nimport SendHouse from './SendHouse';\n\n\nclass App extends Component {\n  \n  async componentWillMount() {\n    await loadWeb3()\n    await this.loadBlockchainData()\n    await this.updateHouses()\n  }\n\n\n  //Loads all the blockchain data\n  async loadBlockchainData() {\n    const web3 = window.web3\n  \n    const accounts = await web3.eth.getAccounts()\n    this.setState({account: accounts[0]})\n\n    const networkId = await web3.eth.net.getId()\n    \n    // Load HouseToken\n    const houseTokenData = HouseToken.networks[networkId]\n    if(houseTokenData) {\n      const abi = HouseToken.abi\n      const address = houseTokenData.address\n      //Load contract and set state\n      const tokenContract = new web3.eth.Contract(abi, address)\n      this.setState({ houseToken : tokenContract })\n      \n      //Get House Token Balance and set to state. \n      //Make sure to reset Metamask account and Network to refresh the contract (if balance is null)\n      let currentHouseTokenBalance = await tokenContract.methods.balanceOf(this.state.account).call()\n      \n      this.setState({ houseTokenBalance: currentHouseTokenBalance })\n      \n      let contractAdmin = await tokenContract.methods.admin().call()\n      this.setState({admin: contractAdmin})\n\n      let currentEthBalance = await web3.eth.getBalance(accounts[0])\n      currentEthBalance = window.web3.utils.fromWei(currentEthBalance, 'Ether')\n      this.setState({currentEthBalance: currentEthBalance})\n\n    } else {\n          window.alert('HouseToken contract not deployed to detected network. Please connect to Ropsten Network') \n    }\n\n    \n      \n  }\n  \n    //Update the House Ids and Owner List\n  async updateHouses() {\n    \n    try{\n        let length = await this.state.houseToken.methods.nextId().call()\n        \n        const houses = []\n        for(let i=1; i<length; i++){\n          let currentHouse = await this.state.houseToken.methods.houses(i).call()\n          houses.push(currentHouse)\n        }\n        \n        this.setState({houseTokenList: houses})\n        this.setState({loading: false})\n        let currentEthBalance = await window.web3.eth.getBalance(this.state.account)\n        currentEthBalance = window.web3.utils.fromWei(currentEthBalance, 'Ether')\n        this.setState({currentEthBalance: currentEthBalance})\n\n        } catch(e){\n          this.setState({loading: true})\n          window.alert('Cannot update houses! Error:', e.message)\n        }\n    \n}\n\n\n\n    \n  //Sends tokens to a specified address\n    sendTokens = (tokenId, address) => {\n      try{\n          \n          this.state.houseToken.methods.transferHouse(address, tokenId).send({ from: this.state.account }).on('transactionHash', async (hash) => {\n           \n            this.setState({hash:hash})\n            this.setState({action: 'Sent House'})\n            this.state.houseToken.events.sentHouse({}, async (error, event) => {\n              let houseID = event.returnValues.id\n              let sentTo = event.returnValues.to\n              window.alert('Sent House! \\n\\n' + 'House ID: ' + houseID + '\\nReceipient: ' + sentTo)\n              await this.updateHouses()\n              let currentHouseTokenBalance = await this.state.houseToken.methods.balanceOf(this.state.account).call()\n              this.setState({ houseTokenBalance: currentHouseTokenBalance })\n          })\n          \n            }).on('error', (error) => {\n              window.alert('Error')\n          })\n\n        } catch (e){\n          window.alert(e)\n        }\n    }\n\n    //Mints House Tokens\n    mintHouse = (houseAddress, squareFeet, price, bedrooms, bathrooms) => {\n      \n      let ethPrice = window.web3.utils.toWei(price, 'Ether')\n      try{\n      this.state.houseToken.methods.mint(houseAddress, squareFeet, ethPrice, bedrooms, bathrooms).send({ from: this.state.account }).on('transactionHash', async (hash) => {\n        this.setState({hash:hash})\n        this.setState({action: 'Minted House'})\n        await this.updateHouses()\n        \n      })\n      } catch(e) {\n        window.alert(e)\n      }\n\n    }\n\n\n    //Buys house tokens from the card\n     buyHouse = (tokenId, housePrice) => {\n      try{\n      this.state.houseToken.methods.buyHouse(tokenId).send({ from: this.state.account, value: housePrice }).on('transactionHash', (hash) => {\n        this.setState({hash:hash})\n        this.setState({action: 'Bought House'})\n        this.state.houseToken.events.boughtHouse({}, async (error, event) => {\n            let result = event.returnValues.homeAddress\n            let price = event.returnValues.price\n            let oldOwner = event.returnValues.owner\n            price = window.web3.utils.fromWei(price, 'Ether')\n            window.alert('Bought House! \\n\\n' + 'Transaction: ' + hash + '\\n\\nAddress: ' + result + '\\nPrice: ' + price + ' ETH' + '\\nBought From: ' + oldOwner)\n            await this.updateHouses()\n             \n        })\n\n          }).on('error', (error) => {\n            window.alert('Error! Could not buy house!')\n          })\n        }\n      catch(e) {\n        window.alert(e)\n      }\n      \n    }\n    \n  \n    //Changes the price of a house\n    changePrice = (tokenId, newPrice) => {\n      try{\n      let ethPrice = window.web3.utils.toWei(newPrice, 'Ether')\n      this.state.houseToken.methods.changePrice(tokenId, ethPrice).send({ from: this.state.account }).on('transactionHash', async (hash) => {\n        this.setState({hash:hash})\n        this.setState({action: 'Changed Price'})\n        this.state.houseToken.events.changedPrice({}, async (error, event) => {\n          let targetID = event.returnValues.id\n          let oldPrice = event.returnValues.oldPrice\n          let newPrice = event.returnValues.newPrice\n          oldPrice = window.web3.utils.fromWei(oldPrice, 'Ether')\n          newPrice = window.web3.utils.fromWei(newPrice, 'Ether')\n          window.alert('Changed Price! \\n\\n' + 'House ID: ' + targetID + '\\nOld Price: ' + oldPrice + ' ETH' + '\\nNew Price: ' + newPrice + ' ETH')\n          await this.updateHouses()\n      })\n      \n        }).on('error', (error) => {\n          window.alert('Error! Could not change price!\\n')\n        })\n      }\n      catch(e) {\n        window.alert(e)\n      }\n\n    }\n\n    constructor(props) {\n      super(props)\n      this.state = {\n        account: '0x0',\n        admin:'0x0',\n        houseToken: {},\n        houseTokenBalance: '0',\n        currentEthBalance: '0',\n        houseTokenList: [],\n        loading: true,\n        hash: '0x0',\n        action: null,\n        wrongNetwork: false\n      }\n    }\n    \n\n  render() {\n    if(this.state.loading) {\n      return (\n        <div className=\"text-center\">\n          <h1 className=\"text-center mt-5\">Loading the Blockchain! Please Wait!</h1> \n          <img className=\"center-block\" src={smile}></img>\n        </div>\n      )\n    }\n\n    window.ethereum.on('accountsChanged', async accounts => {\n      this.setState({account: accounts[0]})\n      window.location.reload()\n      \n      \n    });\n\n    return (\n      <div className=\"App\">\n        <Navbar \n          account={this.state.account}\n          currentBalance={this.state.houseTokenBalance}\n          hash={this.state.hash}\n          action={this.state.action}\n          balance={this.state.currentEthBalance}\n          \n        />\n        \n        <h1 className=\"mt-5\" id=\"title\">House Tokens!</h1>\n        <MintHouse\n          account={this.state.account}\n          admin={this.state.admin}\n          houseToken={this.state.houseToken}\n        />\n\n        <hr/>\n         \n        <div className=\"row justify-content-center\">\n          <SendHouse\n            account={this.state.account}\n            houseTokenBalance = {this.state.houseTokenBalance}\n            houseTokenList = {this.state.houseTokenList}\n            sendTokens = {this.sendTokens}\n          />\n\n          <div className=\"col-lg-6 mr-4\">\n            <h2 className=\"mb-4\">Your Houses</h2>\n            <HouseTable\n              account={this.state.account}\n              houseTokenList={this.state.houseTokenList}\n            />\n          </div>\n        </div>\n        \n        &nbsp;\n        &nbsp;   \n        &nbsp;\n        &nbsp;\n        <hr/>\n              \n        <Main \n          houseItems = {this.state.houseTokenList}\n          buyHouse = {this.buyHouse}\n          account={this.state.account}\n          changePrice={this.changePrice}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n","module.exports = __webpack_public_path__ + \"static/media/ETH.78ef24a2.png\";"],"sourceRoot":""}